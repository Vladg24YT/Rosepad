--- ULPPManager.java
+++ ULPPManager.java
@@ -2,6 +2,9 @@
 
 import java.io.IOException;
+import java.util.*;
+
 import net.minecraft.client.Minecraft;
 
+// TODO: Replace half of methods with better implementation
 public class ULPPManager {
     public static final boolean enabled = true;
@@ -10,31 +13,30 @@
     public static final int ULPP_VERSION = 1;
     
-    public static String GetVersionString(final boolean online) {
+    public static String GetVersionString(final boolean online, final boolean rosepad) {
+    	List<String> parts = new ArrayList<>();
+    	StringBuilder builder = new StringBuilder();
         if (online) {
-            return new StringBuilder("ULPP").append(Integer.toString(1)).toString();
+            parts.add("ULPP1");
         }
-        return new StringBuilder("OFFL").append(Integer.toString(1)).toString();
+        if (rosepad) {
+            parts.add("ROSE2");
+        }
+    	boolean first = true;
+    	for (String part : parts) {
+    		if (!first) builder.append(";");
+    		builder.append(part);
+    		first = false;
+    	}
+    	return builder.toString();
     }
-    
-    public static boolean IsVersionString(final String ver) {
-        return ver.startsWith("ULPP") || ver.startsWith("OFFL");
-    }
-    
-    public static int GetVersion(final String ver) {
-        return Integer.parseInt(ver.substring("ULPP".length()));
-    }
-    
-    public static boolean IsOnline(final String ver) {
-        return ver.startsWith("ULPP");
-    }
-    
-    public static NetHandler CreateClientHandler(final int version, final Minecraft mc, final NetworkManager netManager) {
+
+    public static NetHandler CreateClientHandler(final int version, final Minecraft mc, final NetworkManager netManager, ConnectionChannelAdapter adapter) {
         try {
             switch (version) {
                 case 1: {
-                    return new NetULPP1ClientHandler(mc, netManager);
+                    return new NetULPP1ClientHandler(mc, netManager, adapter);
                 }
                 default: {
-                    throw new RuntimeException(new StringBuilder("Unknown ULPP version ").append(Integer.toString(version)).toString());
+                    throw new RuntimeException("Unknown ULPP version " + Integer.toString(version));
                 }
             }
@@ -42,5 +44,5 @@
         catch (IOException e) {
             e.printStackTrace();
-            throw new RuntimeException(new StringBuilder("Error occurred creating ULPP ").append(Integer.toString(version)).append(" handler").toString());
+            throw new RuntimeException("Error occurred creating ULPP " + Integer.toString(version) + " handler");
         }
     }
