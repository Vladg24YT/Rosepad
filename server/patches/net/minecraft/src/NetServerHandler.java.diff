--- NetServerHandler.java
+++ NetServerHandler.java
@@ -3,4 +3,5 @@
 import java.io.IOException;
 import net.minecraft.server.MinecraftServer;
+
 import java.util.logging.Logger;
 
@@ -59,49 +60,96 @@
             this.lastPosY = this.playerEntity.posY;
             this.lastPosZ = this.playerEntity.posZ;
-            double d2 = this.playerEntity.posX;
-            double d3 = this.playerEntity.posY;
-            double d4 = this.playerEntity.posZ;
-            float f8 = this.playerEntity.rotationYaw;
-            float f9 = this.playerEntity.rotationPitch;
+            double posX = this.playerEntity.posX;
+            double posY = this.playerEntity.posY;
+            double posZ = this.playerEntity.posZ;
+            float rotationYaw = this.playerEntity.rotationYaw;
+            float rotationPitch = this.playerEntity.rotationPitch;
             if (packet.moving) {
-                d2 = packet.xPosition;
-                d3 = packet.yPosition;
-                d4 = packet.zPosition;
+                posX = packet.xPosition;
+                posY = packet.yPosition;
+                posZ = packet.zPosition;
                 final double d5 = packet.stance - packet.yPosition;
                 if (d5 > 1.65 || d5 < 0.1) {
                     this.kickPlayer("Illegal stance");
-                    NetServerHandler.logger.warning(String.valueOf(this.playerEntity.username) + " had an illegal stance: " + d5);
+                    NetServerHandler.logger.warning(this.playerEntity.username + " had an illegal stance: " + d5);
                 }
                 this.playerEntity.managedPosY = packet.stance;
             }
             if (packet.rotating) {
-                f8 = packet.yaw;
-                f9 = packet.pitch;
+                rotationYaw = packet.yaw;
+                rotationPitch = packet.pitch;
             }
             this.playerEntity.onUpdateEntity();
             this.playerEntity.ySize = 0.0f;
-            this.playerEntity.setPositionAndRotation(this.lastPosX, this.lastPosY, this.lastPosZ, f8, f9);
-            double d5 = d2 - this.playerEntity.posX;
-            double d6 = d3 - this.playerEntity.posY;
-            double d7 = d4 - this.playerEntity.posZ;
-            final float f10 = 0.0625f;
-            final boolean z17 = this.mcServer.worldMngr.getCollidingBoundingBoxes(this.playerEntity, this.playerEntity.boundingBox.copy().removeCoord(f10, f10, f10)).size() == 0;
-            this.playerEntity.moveEntity(d5, d6, d7);
-            d5 = d2 - this.playerEntity.posX;
-            d6 = d3 - this.playerEntity.posY;
-            if (d6 > -0.5 || d6 < 0.5) {
-                d6 = 0.0;
+            this.playerEntity.setPositionAndRotation(
+                    this.lastPosX, this.lastPosY, this.lastPosZ,
+                    rotationYaw, rotationPitch
+            );
+            double diffX = posX - this.playerEntity.posX;
+            double diffY = posY - this.playerEntity.posY;
+            double diffZ = posZ - this.playerEntity.posZ;
+            final float zeroSixTwoFive = 0.0625f;
+            final boolean stuffWereInTheWay = this.mcServer.worldMngr.getCollidingBoundingBoxes(
+                    this.playerEntity,
+                    this.playerEntity.boundingBox.copy().removeCoord(zeroSixTwoFive, zeroSixTwoFive, zeroSixTwoFive)
+            ).size() > 0;
+            this.playerEntity.moveEntity(diffX, diffY, diffZ);
+            diffX = posX - this.playerEntity.posX;
+            diffY = posY - this.playerEntity.posY;
+            if (diffY > -0.5 || diffY < 0.5) {
+                diffY = 0.0;
             }
-            d7 = d4 - this.playerEntity.posZ;
-            final double d8 = d5 * d5 + d6 * d6 + d7 * d7;
-            boolean z18 = false;
-            if (d8 > 0.0625) {
-                z18 = true;
-                NetServerHandler.logger.warning(String.valueOf(this.playerEntity.username) + " moved wrongly!");
+            diffZ = posZ - this.playerEntity.posZ;
+            final double squaredDistance = diffX * diffX + diffY * diffY + diffZ * diffZ;
+            boolean wrongMove = false;
+            if (squaredDistance > 0.0625) {
+                wrongMove = true;
+                NetServerHandler.logger.warning(this.playerEntity.username + " moved wrongly!");
             }
-            this.playerEntity.setPositionAndRotation(d2, d3, d4, f8, f9);
-            final boolean z19 = this.mcServer.worldMngr.getCollidingBoundingBoxes(this.playerEntity, this.playerEntity.boundingBox.copy().removeCoord(f10, f10, f10)).size() == 0;
-            if (z17 && (z18 || !z19)) {
-                this.teleportTo(this.lastPosX, this.lastPosY, this.lastPosZ, f8, f9);
+            this.playerEntity.setPositionAndRotation(posX, posY, posZ, rotationYaw, rotationPitch);
+            final boolean stuffInTheWay = this.mcServer.worldMngr.getCollidingBoundingBoxes(
+                    this.playerEntity,
+                    this.playerEntity.boundingBox.copy().removeCoord(zeroSixTwoFive, zeroSixTwoFive, zeroSixTwoFive)
+            ).size() == 0;
+            if (stuffWereInTheWay && (wrongMove || !stuffInTheWay)) { // Why tf it needs to be so complicated?
+//              double addX = lastPosX > 0 ? lastPosX - Math.floor(lastPosX) : 1 - (-lastPosX - Math.floor(-lastPosX));
+//              double addY = lastPosY > 0 ? lastPosY - Math.floor(lastPosY) : 1 - (-lastPosY - Math.floor(-lastPosY));
+//              double addZ = lastPosZ > 0 ? lastPosZ - Math.floor(lastPosZ) : 1 - (-lastPosZ - Math.floor(-lastPosZ));
+
+//              int blockX = (int) Math.floor(posX);
+//              int blockY = (int) Math.floor(posY);
+//              int blockZ = (int) Math.floor(posZ);
+                int lastBlockX = (int) Math.floor(lastPosX);
+                int lastBlockY = (int) Math.floor(lastPosY);
+                int lastBlockZ = (int) Math.floor(lastPosZ);
+
+//              if (addX < 0.3) addX = -0.5;
+//              else if (addX > 0.7) addX = 0.5;
+//              else addX = 0;
+//              if (addY < 0.3) addY = -0.5;
+//              else if (addY > 0.7) addY = 0.5;
+//              else addY = 0;
+//              if (addZ < 0.3) addZ = -0.5;
+//              else if (addZ > 0.7) addZ = 0.5;
+//              else addZ = 0;
+
+//              if (addX > 0 && this.mcServer.worldMngr.getBlockId(blockX + 1, blockY, blockZ) != 0) addX = 0;
+//              if (addX < 0 && this.mcServer.worldMngr.getBlockId(blockX - 1, blockY, blockZ) != 0) addX = 0;
+//              if (addY > 0 && this.mcServer.worldMngr.getBlockId(blockX, blockY + 1, blockZ) != 0) addY = 0;
+//              if (addY < 0 && this.mcServer.worldMngr.getBlockId(blockX, blockY - 1, blockZ) != 0) addY = 0;
+//              if (addZ > 0 && this.mcServer.worldMngr.getBlockId(blockX, blockY, blockZ + 1) != 0) addZ = 0;
+//              if (addZ < 0 && this.mcServer.worldMngr.getBlockId(blockX, blockY, blockZ - 1) != 0) addZ = 0;
+
+//              if (addY == 0 && addX == 0 && addZ == 0) addY = 0.8; // Fallback if player is stuck
+
+//              if (this.mcServer.worldMngr.getBlockId(blockX, blockY, blockZ) == 0) {
+//                  addX *= -0.5;
+//                  addY *= -0.5;
+//                  addZ *= -0.5;
+//              }
+
+                this.sendPacket(new Packet53BlockChange(lastBlockX, lastBlockY, lastBlockZ, this.mcServer.worldMngr));
+                this.teleportTo(lastPosX, lastPosY + 0.5, lastPosZ, rotationYaw, rotationPitch);
+
                 return;
             }
@@ -151,10 +199,10 @@
         final int i20 = packet.zPosition;
         final int i21 = packet.face;
-        final int maxDistX = (int)MathHelper.abs((float)(i18 - this.mcServer.worldMngr.spawnX));
-        int maxDist = (int)MathHelper.abs((float)(i20 - this.mcServer.worldMngr.spawnZ));
-        if (maxDistX > maxDist) {
-            maxDist = maxDistX;
-        }
-        final boolean allowed = maxDist > 4096 || (isAuthed && maxDist > 16) || isOP;
+        double distance = Math.abs(packet.xPosition - playerEntity.posX) +
+                Math.abs(packet.yPosition - playerEntity.posY) +
+                Math.abs(packet.zPosition - playerEntity.posZ);
+        double spawnDistance = Math.abs(packet.xPosition - worldMngr.spawnX) +
+                Math.abs(packet.zPosition - worldMngr.spawnZ);
+        final boolean allowed = (isAuthed || !mcServer.onlineMode) && distance < 7.5 && spawnDistance > 16 || isOP;
         if (packet.status == 0) {
             if (allowed) {
@@ -193,10 +241,10 @@
         final int i5 = packet.zPosition;
         final int i6 = packet.direction;
-        final int maxDistX = (int)MathHelper.abs((float)(i3 - this.mcServer.worldMngr.spawnX));
-        int maxDist = (int)MathHelper.abs((float)(i5 - this.mcServer.worldMngr.spawnZ));
-        if (maxDistX > maxDist) {
-            maxDist = maxDistX;
-        }
-        final boolean allowed = maxDist > 4096 || (isAuthed && maxDist > 16) || isOP;
+        double distance = Math.abs(packet.xPosition - playerEntity.posX) +
+                Math.abs(packet.yPosition - playerEntity.posY) +
+                Math.abs(packet.zPosition - playerEntity.posZ);
+        double spawnDistance = Math.abs(packet.xPosition - worldMngr.spawnX) +
+                Math.abs(packet.zPosition - worldMngr.spawnZ);
+        final boolean allowed = (isAuthed || !mcServer.onlineMode) && distance < 7.5 && spawnDistance > 16 || isOP;
         if (allowed) {
             final ItemStack itemStack9 = (packet.id >= 0) ? new ItemStack(packet.id) : null;
@@ -209,5 +257,5 @@
     @Override
     public void handleErrorMessage(final String message) {
-        NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " lost connection: " + message);
+        NetServerHandler.logger.info(this.playerEntity.username + " lost connection: " + message);
         this.mcServer.configManager.playerLoggedOut(this.playerEntity);
         this.connectionClosed = true;
@@ -216,5 +264,5 @@
     @Override
     public void registerPacket(final Packet packet) {
-        NetServerHandler.logger.warning(new StringBuilder().append(this.getClass()).append(" wasn't prepared to deal with a ").append(packet.getClass()).toString());
+        NetServerHandler.logger.warning(this.getClass() + " wasn't prepared to deal with a " + packet.getClass());
         this.kickPlayer("Protocol error, unexpected packet");
     }
@@ -269,5 +317,5 @@
             }
             else {
-                string2 = new StringBuilder("<").append(this.playerEntity.username).append("> ").append(string2).toString();
+                string2 = "<" + this.playerEntity.username + "> " + string2;
                 NetServerHandler.logger.info(string2);
                 this.mcServer.configManager.sendPacketToAllPlayers(new Packet3Chat(string2));
@@ -278,5 +326,5 @@
     private void handleSlashCommand(String string1) {
         if (string1.toLowerCase().startsWith("/me ")) {
-            string1 = new StringBuilder("* ").append(this.playerEntity.username).append(" ").append(string1.substring(string1.indexOf(" ")).trim()).toString();
+            string1 = "* " + this.playerEntity.username + " " + string1.substring(string1.indexOf(" ")).trim();
             NetServerHandler.logger.info(string1);
             this.mcServer.configManager.sendPacketToAllPlayers(new Packet3Chat(string1));
@@ -287,6 +335,6 @@
                 string1 = string1.substring(string1.indexOf(" ")).trim();
                 string1 = string1.substring(string1.indexOf(" ")).trim();
-                string1 = new StringBuilder("§7").append(this.playerEntity.username).append(" whispers ").append(string1).toString();
-                NetServerHandler.logger.info(String.valueOf(string1) + " to " + string2[1]);
+                string1 = "§7" + this.playerEntity.username + " whispers " + string1;
+                NetServerHandler.logger.info(string1 + " to " + string2[1]);
                 if (!this.mcServer.configManager.sendPacketToPlayer(string2[1], new Packet3Chat(string1))) {
                     this.sendPacket(new Packet3Chat("§cThere's no player by that name online."));
@@ -294,17 +342,17 @@
             }
         }
-        else if (string1.toLowerCase().equalsIgnoreCase("/home")) {
-            NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " returned home");
+        else if (string1.equalsIgnoreCase("/home")) {
+            NetServerHandler.logger.info(this.playerEntity.username + " returned home");
             final int i3 = this.mcServer.worldMngr.getTopSolidOrLiquidBlock(this.mcServer.worldMngr.spawnX, this.mcServer.worldMngr.spawnZ);
             this.teleportTo(this.mcServer.worldMngr.spawnX + 0.5, i3 + 1.5, this.mcServer.worldMngr.spawnZ + 0.5, 0.0f, 0.0f);
         }
-        else if (string1.toLowerCase().equalsIgnoreCase("/iron")) {
+        else if (string1.equalsIgnoreCase("/iron")) {
             if (MinecraftServer.playerList.containsKey(this.playerEntity.username)) {
-                NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " failed to iron!");
+                NetServerHandler.logger.info(this.playerEntity.username + " failed to iron!");
                 this.sendPacket(new Packet3Chat("§cYou can't /iron again so soon!"));
             }
             else {
                 MinecraftServer.playerList.put(this.playerEntity.username, 6000);
-                NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " ironed!");
+                NetServerHandler.logger.info(this.playerEntity.username + " ironed!");
                 for (int i3 = 0; i3 < 4; ++i3) {
                     this.playerEntity.dropPlayerItem(new ItemStack(Item.ingotIron, 1));
@@ -312,14 +360,14 @@
             }
         }
-        else if (string1.toLowerCase().equalsIgnoreCase("/wood")) {
+        else if (string1.equalsIgnoreCase("/wood")) {
             if (MinecraftServer.playerList.containsKey(this.playerEntity.username)) {
-                NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " failed to wood!");
+                NetServerHandler.logger.info(this.playerEntity.username + " failed to wood!");
                 this.sendPacket(new Packet3Chat("§cYou can't /wood again so soon!"));
             }
             else {
                 MinecraftServer.playerList.put(this.playerEntity.username, 6000);
-                NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " wooded!");
+                NetServerHandler.logger.info(this.playerEntity.username + " wooded!");
                 for (int i3 = 0; i3 < 4; ++i3) {
-                    this.playerEntity.dropPlayerItem(new ItemStack(Block.sapling, 1));
+                    this.playerEntity.dropPlayerItem(new ItemStack(Block.SAPLING, 1));
                 }
             }
@@ -327,10 +375,10 @@
         else if (this.mcServer.configManager.isOp(this.playerEntity.username)) {
             final String string3 = string1.substring(1);
-            NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " issued server command: " + string3);
+            NetServerHandler.logger.info(this.playerEntity.username + " issued server command: " + string3);
             this.mcServer.addCommand(string3, this);
         }
         else {
             final String string3 = string1.substring(1);
-            NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " tried command: " + string3);
+            NetServerHandler.logger.info(this.playerEntity.username + " tried command: " + string3);
         }
     }
@@ -354,5 +402,5 @@
     @Override
     public void addHelpCommandMessage(final String helpCommandMessage) {
-        this.sendPacket(new Packet3Chat(new StringBuilder("§7").append(helpCommandMessage).toString()));
+        this.sendPacket(new Packet3Chat("§7" + helpCommandMessage));
     }
     
@@ -389,3 +437,29 @@
         }
     }
+
+    @Override
+    public void handleEntityDamage(Packet35EntityDamage packet) {
+        Entity entity = this.mcServer.worldMngr.getEntityWithId(packet.entityId);
+        if (entity == null) {
+            return;
+        }
+        if (entity instanceof EntityPlayer) {
+            if (entity.entityID != playerEntity.entityID) return;
+            if (packet.dead) {
+                entity.setPosition(
+                        mcServer.worldMngr.spawnX,
+                        mcServer.worldMngr.spawnY,
+                        mcServer.worldMngr.spawnZ
+                );
+            }
+            return;
+        }
+        entity.attackEntityFrom(playerEntity, packet.damage);
+    }
+
+    @Override
+    public void handleRosepadMeta(Packet130RosepadMeta packet) { // This is important for porting Waterfall/Bungeecord to Lilypad
+        System.out.println("Player " + this.playerEntity.username + " joined server \""
+                + packet.host + "\" using " + packet.clientName);
+    }
 }
