--- NetServerHandler.java
+++ NetServerHandler.java
@@ -2,5 +2,9 @@
 
 import java.io.IOException;
+
+import net.buj.rml.Game;
+import net.buj.rml.events.server.ChatMessageEvent;
 import net.minecraft.server.MinecraftServer;
+
 import java.util.logging.Logger;
 
@@ -17,9 +21,9 @@
     protected boolean hasMoved;
     protected ItemStack heldItem;
-    
+
     static {
         NetServerHandler.logger = Logger.getLogger("Minecraft");
     }
-    
+
     public NetServerHandler(final MinecraftServer minecraftServer1, final NetworkManager networkManager2, final EntityPlayerMP entityPlayerMP3) {
         this.connectionClosed = false;
@@ -32,5 +36,5 @@
         entityPlayerMP3.playerNetServerHandler = this;
     }
-    
+
     public void handlePackets() throws IOException {
         this.netManager.processReadPackets();
@@ -39,5 +43,5 @@
         }
     }
-    
+
     public void kickPlayer(final String string1) {
         this.netManager.addToSendQueue(new Packet255KickDisconnect(string1));
@@ -46,5 +50,5 @@
         this.connectionClosed = true;
     }
-    
+
     @Override
     public void handleFlying(final Packet10Flying packet) {
@@ -59,39 +63,42 @@
             this.lastPosY = this.playerEntity.posY;
             this.lastPosZ = this.playerEntity.posZ;
-            double d2 = this.playerEntity.posX;
-            double d3 = this.playerEntity.posY;
-            double d4 = this.playerEntity.posZ;
-            float f8 = this.playerEntity.rotationYaw;
-            float f9 = this.playerEntity.rotationPitch;
+            double posX = this.playerEntity.posX;
+            double posY = this.playerEntity.posY;
+            double posZ = this.playerEntity.posZ;
+            float rotationYaw = this.playerEntity.rotationYaw;
+            float rotationPitch = this.playerEntity.rotationPitch;
             if (packet.moving) {
-                d2 = packet.xPosition;
-                d3 = packet.yPosition;
-                d4 = packet.zPosition;
+                posX = packet.xPosition;
+                posY = packet.yPosition;
+                posZ = packet.zPosition;
                 final double d5 = packet.stance - packet.yPosition;
                 if (d5 > 1.65 || d5 < 0.1) {
                     this.kickPlayer("Illegal stance");
-                    NetServerHandler.logger.warning(String.valueOf(this.playerEntity.username) + " had an illegal stance: " + d5);
+                    NetServerHandler.logger.warning(this.playerEntity.username + " had an illegal stance: " + d5);
                 }
                 this.playerEntity.managedPosY = packet.stance;
             }
             if (packet.rotating) {
-                f8 = packet.yaw;
-                f9 = packet.pitch;
+                rotationYaw = packet.yaw;
+                rotationPitch = packet.pitch;
             }
             this.playerEntity.onUpdateEntity();
             this.playerEntity.ySize = 0.0f;
-            this.playerEntity.setPositionAndRotation(this.lastPosX, this.lastPosY, this.lastPosZ, f8, f9);
-            double d5 = d2 - this.playerEntity.posX;
-            double d6 = d3 - this.playerEntity.posY;
-            double d7 = d4 - this.playerEntity.posZ;
+            this.playerEntity.setPositionAndRotation(
+                    this.lastPosX, this.lastPosY, this.lastPosZ,
+                    rotationYaw, rotationPitch
+            );
+            double d5 = posX - this.playerEntity.posX;
+            double d6 = posY - this.playerEntity.posY;
+            double d7 = posZ - this.playerEntity.posZ;
             final float f10 = 0.0625f;
             final boolean z17 = this.mcServer.worldMngr.getCollidingBoundingBoxes(this.playerEntity, this.playerEntity.boundingBox.copy().removeCoord(f10, f10, f10)).size() == 0;
             this.playerEntity.moveEntity(d5, d6, d7);
-            d5 = d2 - this.playerEntity.posX;
-            d6 = d3 - this.playerEntity.posY;
+            d5 = posX - this.playerEntity.posX;
+            d6 = posY - this.playerEntity.posY;
+            d7 = posZ - this.playerEntity.posZ;
             if (d6 > -0.5 || d6 < 0.5) {
                 d6 = 0.0;
             }
-            d7 = d4 - this.playerEntity.posZ;
             final double d8 = d5 * d5 + d6 * d6 + d7 * d7;
             boolean z18 = false;
@@ -100,8 +107,14 @@
                 NetServerHandler.logger.warning(String.valueOf(this.playerEntity.username) + " moved wrongly!");
             }
-            this.playerEntity.setPositionAndRotation(d2, d3, d4, f8, f9);
+            this.playerEntity.setPositionAndRotation(posX, posY, posZ, rotationYaw, rotationPitch);
             final boolean z19 = this.mcServer.worldMngr.getCollidingBoundingBoxes(this.playerEntity, this.playerEntity.boundingBox.copy().removeCoord(f10, f10, f10)).size() == 0;
             if (z17 && (z18 || !z19)) {
-                this.teleportTo(this.lastPosX, this.lastPosY, this.lastPosZ, f8, f9);
+                int blockX = (int) Math.floor(posX);
+                int blockY = (int) Math.floor(posY);
+                int blockZ = (int) Math.floor(posZ);
+                for (int i = -1; i <= 1; i++) for (int o = -1; o <= 1; o++) for (int p = -1; p <= 1; p++)
+                    if (blockY + i >= 0 && blockY + i <= 127)
+                        this.sendPacket(new Packet53BlockChange(blockX + i, blockY + o, blockZ + p, playerEntity.worldObj));
+                this.teleportTo(this.lastPosX, this.lastPosY, this.lastPosZ, rotationYaw, rotationPitch);
                 return;
             }
@@ -110,5 +123,5 @@
         }
     }
-    
+
     public void teleportTo(final double d1, final double d3, final double d5, final float f7, final float f8) {
         this.hasMoved = false;
@@ -119,5 +132,5 @@
         this.playerEntity.playerNetServerHandler.sendPacket(new Packet13PlayerLookMove(d1, d3 + 1.6200000047683716, d3, d5, f7, f8, false));
     }
-    
+
     @Override
     public void handleBlockDig(final Packet14BlockDig packet) {
@@ -151,10 +164,10 @@
         final int i20 = packet.zPosition;
         final int i21 = packet.face;
-        final int maxDistX = (int)MathHelper.abs((float)(i18 - this.mcServer.worldMngr.spawnX));
-        int maxDist = (int)MathHelper.abs((float)(i20 - this.mcServer.worldMngr.spawnZ));
-        if (maxDistX > maxDist) {
-            maxDist = maxDistX;
-        }
-        final boolean allowed = maxDist > 4096 || (isAuthed && maxDist > 16) || isOP;
+        double distance = Math.abs(packet.xPosition - playerEntity.posX) +
+                Math.abs(packet.yPosition - playerEntity.posY) +
+                Math.abs(packet.zPosition - playerEntity.posZ);
+        double spawnDistance = Math.abs(packet.xPosition - worldMngr.spawnX) +
+                Math.abs(packet.zPosition - worldMngr.spawnZ);
+        final boolean allowed = (isAuthed || !mcServer.onlineMode) && distance < 7.5 && spawnDistance > 16 || isOP;
         if (packet.status == 0) {
             if (allowed) {
@@ -181,5 +194,5 @@
         this.mcServer.worldMngr.disableSpawnProtection = false;
     }
-    
+
     @Override
     public void handlePlace(final Packet15Place packet) {
@@ -193,10 +206,10 @@
         final int i5 = packet.zPosition;
         final int i6 = packet.direction;
-        final int maxDistX = (int)MathHelper.abs((float)(i3 - this.mcServer.worldMngr.spawnX));
-        int maxDist = (int)MathHelper.abs((float)(i5 - this.mcServer.worldMngr.spawnZ));
-        if (maxDistX > maxDist) {
-            maxDist = maxDistX;
-        }
-        final boolean allowed = maxDist > 4096 || (isAuthed && maxDist > 16) || isOP;
+        double distance = Math.abs(packet.xPosition - playerEntity.posX) +
+                Math.abs(packet.yPosition - playerEntity.posY) +
+                Math.abs(packet.zPosition - playerEntity.posZ);
+        double spawnDistance = Math.abs(packet.xPosition - worldMngr.spawnX) +
+                Math.abs(packet.zPosition - worldMngr.spawnZ);
+        final boolean allowed = (isAuthed || !mcServer.onlineMode) && distance < 7.5 && spawnDistance > 16 || isOP;
         if (allowed) {
             final ItemStack itemStack9 = (packet.id >= 0) ? new ItemStack(packet.id) : null;
@@ -206,22 +219,22 @@
         this.mcServer.worldMngr.disableSpawnProtection = false;
     }
-    
+
     @Override
     public void handleErrorMessage(final String message) {
-        NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " lost connection: " + message);
+        NetServerHandler.logger.info(this.playerEntity.username + " lost connection: " + message);
         this.mcServer.configManager.playerLoggedOut(this.playerEntity);
         this.connectionClosed = true;
     }
-    
+
     @Override
     public void registerPacket(final Packet packet) {
-        NetServerHandler.logger.warning(new StringBuilder().append(this.getClass()).append(" wasn't prepared to deal with a ").append(packet.getClass()).toString());
+        NetServerHandler.logger.warning(this.getClass() + " wasn't prepared to deal with a " + packet.getClass());
         this.kickPlayer("Protocol error, unexpected packet");
     }
-    
+
     public void sendPacket(final Packet packet1) {
         this.netManager.addToSendQueue(packet1);
     }
-    
+
     @Override
     public void handleBlockItemSwitch(final Packet16BlockItemSwitch packet) {
@@ -237,5 +250,5 @@
         this.mcServer.entityTracker.sendPacketToTrackedPlayers(this.playerEntity, new Packet16BlockItemSwitch(this.playerEntity.entityID, i2));
     }
-    
+
     @Override
     public void handlePickupSpawn(final Packet21PickupSpawn packet) {
@@ -250,5 +263,5 @@
         this.mcServer.worldMngr.spawnEntityInWorld(entityItem8);
     }
-    
+
     @Override
     public void handleChat(final Packet3Chat packet) {
@@ -269,14 +282,16 @@
             }
             else {
-                string2 = new StringBuilder("<").append(this.playerEntity.username).append("> ").append(string2).toString();
-                NetServerHandler.logger.info(string2);
-                this.mcServer.configManager.sendPacketToAllPlayers(new Packet3Chat(string2));
+                ChatMessageEvent event = new ChatMessageEvent(this.playerEntity.username, string2);
+                if (!Game.EVENT_LOOP.emit(event).isCancelled()) {
+                    this.mcServer.configManager.sendPacketToAllPlayers(new Packet3Chat(event.getMessage()));
+                    NetServerHandler.logger.info(event.getMessage());
+                }
             }
         }
     }
-    
+
     private void handleSlashCommand(String string1) {
         if (string1.toLowerCase().startsWith("/me ")) {
-            string1 = new StringBuilder("* ").append(this.playerEntity.username).append(" ").append(string1.substring(string1.indexOf(" ")).trim()).toString();
+            string1 = "* " + this.playerEntity.username + " " + string1.substring(string1.indexOf(" ")).trim();
             NetServerHandler.logger.info(string1);
             this.mcServer.configManager.sendPacketToAllPlayers(new Packet3Chat(string1));
@@ -287,6 +302,6 @@
                 string1 = string1.substring(string1.indexOf(" ")).trim();
                 string1 = string1.substring(string1.indexOf(" ")).trim();
-                string1 = new StringBuilder("§7").append(this.playerEntity.username).append(" whispers ").append(string1).toString();
-                NetServerHandler.logger.info(String.valueOf(string1) + " to " + string2[1]);
+                string1 = "§7" + this.playerEntity.username + " whispers " + string1;
+                NetServerHandler.logger.info(string1 + " to " + string2[1]);
                 if (!this.mcServer.configManager.sendPacketToPlayer(string2[1], new Packet3Chat(string1))) {
                     this.sendPacket(new Packet3Chat("§cThere's no player by that name online."));
@@ -294,17 +309,17 @@
             }
         }
-        else if (string1.toLowerCase().equalsIgnoreCase("/home")) {
-            NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " returned home");
+        else if (string1.equalsIgnoreCase("/home")) {
+            NetServerHandler.logger.info(this.playerEntity.username + " returned home");
             final int i3 = this.mcServer.worldMngr.getTopSolidOrLiquidBlock(this.mcServer.worldMngr.spawnX, this.mcServer.worldMngr.spawnZ);
             this.teleportTo(this.mcServer.worldMngr.spawnX + 0.5, i3 + 1.5, this.mcServer.worldMngr.spawnZ + 0.5, 0.0f, 0.0f);
         }
-        else if (string1.toLowerCase().equalsIgnoreCase("/iron")) {
+        else if (string1.equalsIgnoreCase("/iron")) {
             if (MinecraftServer.playerList.containsKey(this.playerEntity.username)) {
-                NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " failed to iron!");
+                NetServerHandler.logger.info(this.playerEntity.username + " failed to iron!");
                 this.sendPacket(new Packet3Chat("§cYou can't /iron again so soon!"));
             }
             else {
                 MinecraftServer.playerList.put(this.playerEntity.username, 6000);
-                NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " ironed!");
+                NetServerHandler.logger.info(this.playerEntity.username + " ironed!");
                 for (int i3 = 0; i3 < 4; ++i3) {
                     this.playerEntity.dropPlayerItem(new ItemStack(Item.ingotIron, 1));
@@ -312,14 +327,14 @@
             }
         }
-        else if (string1.toLowerCase().equalsIgnoreCase("/wood")) {
+        else if (string1.equalsIgnoreCase("/wood")) {
             if (MinecraftServer.playerList.containsKey(this.playerEntity.username)) {
-                NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " failed to wood!");
+                NetServerHandler.logger.info(this.playerEntity.username + " failed to wood!");
                 this.sendPacket(new Packet3Chat("§cYou can't /wood again so soon!"));
             }
             else {
                 MinecraftServer.playerList.put(this.playerEntity.username, 6000);
-                NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " wooded!");
+                NetServerHandler.logger.info(this.playerEntity.username + " wooded!");
                 for (int i3 = 0; i3 < 4; ++i3) {
-                    this.playerEntity.dropPlayerItem(new ItemStack(Block.sapling, 1));
+                    this.playerEntity.dropPlayerItem(new ItemStack(Block.SAPLING, 1));
                 }
             }
@@ -327,13 +342,13 @@
         else if (this.mcServer.configManager.isOp(this.playerEntity.username)) {
             final String string3 = string1.substring(1);
-            NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " issued server command: " + string3);
+            NetServerHandler.logger.info(this.playerEntity.username + " issued server command: " + string3);
             this.mcServer.addCommand(string3, this);
         }
         else {
             final String string3 = string1.substring(1);
-            NetServerHandler.logger.info(String.valueOf(this.playerEntity.username) + " tried command: " + string3);
+            NetServerHandler.logger.info(this.playerEntity.username + " tried command: " + string3);
         }
     }
-    
+
     @Override
     public void handleArmAnimation(final Packet18ArmAnimation packet) {
@@ -342,24 +357,24 @@
         }
     }
-    
+
     @Override
     public void handleKickDisconnect(final Packet255KickDisconnect packet) {
         this.netManager.networkShutdown("Quitting");
     }
-    
+
     public int getNumChunkDataPackets() {
         return this.netManager.getNumChunkDataPackets();
     }
-    
+
     @Override
     public void addHelpCommandMessage(final String helpCommandMessage) {
-        this.sendPacket(new Packet3Chat(new StringBuilder("§7").append(helpCommandMessage).toString()));
+        this.sendPacket(new Packet3Chat("§7" + helpCommandMessage));
     }
-    
+
     @Override
     public String getUsername() {
         return this.playerEntity.username;
     }
-    
+
     @Override
     public void handlePlayerInventory(final Packet5PlayerInventory packet) {
@@ -374,5 +389,5 @@
         }
     }
-    
+
     public void sendInventoryPackets() {
         this.netManager.addToSendQueue(new Packet5PlayerInventory(-1, this.playerEntity.inventory.mainInventory));
@@ -380,5 +395,5 @@
         this.netManager.addToSendQueue(new Packet5PlayerInventory(-3, this.playerEntity.inventory.armorInventory));
     }
-    
+
     @Override
     public void handleComplexEntity(final Packet59ComplexEntity packet) {
@@ -389,3 +404,28 @@
         }
     }
+
+    @Override
+    public void handleEntityDamage(Packet35EntityDamage packet) {
+        Entity entity = packet.entityId == -1
+                ? this.playerEntity
+                : this.mcServer.worldMngr.getEntityWithId(packet.entityId);
+        if (entity == null) {
+            return;
+        }
+        if (entity instanceof EntityPlayer) {
+            if (entity.entityID != playerEntity.entityID) return;
+            if (packet.dead) {
+                Packet3Chat chat = new Packet3Chat(((EntityPlayer) entity).username + " died");
+                this.mcServer.configManager.sendPacketToAllPlayers(chat);
+            }
+            return;
+        }
+        entity.attackEntityFrom(playerEntity, packet.damage);
+    }
+
+    @Override
+    public void handleRosepadMeta(Packet130RosepadMeta packet) { // This is important for porting Waterfall/Bungeecord to Lilypad
+        System.out.println("Player " + this.playerEntity.username + " joined server \""
+                + packet.host + "\" using " + packet.clientName);
+    }
 }
